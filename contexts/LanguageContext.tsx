import React, { createContext, useState, useContext, ReactNode } from 'react';

const translations = {
  en: {
    ui: {
      // Service Selector
      selectServiceTitle: "Choose a Service",
      figureFusionTitle: "Figure Fusion AI",
      figureFusionDescription: "Turn photos into collectible figures.",
      tryOnTitle: "Virtual Try-On AI",
      tryOnDescription: "Style a person with clothes from images.",
      backButtonLabel: "Go Back",
      soccerUniformTitle: "Soccer Uniform AI",
      soccerUniformDescription: "Design a custom soccer uniform with detailed options.",

      // Header
      headerTitle: "Figure Fusion AI",
      headerSubtitle: "Upload a photo and our AI will magically transform it into a stunning, collectible-style figure.",
      
      // Try-On Header
      tryOnHeaderTitle: "Virtual Try-On AI",
      tryOnHeaderSubtitle: "Upload a person and clothes to see them styled.",

      // Soccer Header
      soccerHeaderTitle: "Soccer Uniform Designer",
      soccerHeaderSubtitle: "Create your unique team kit. Specify colors, patterns, logos, and more to generate a professional soccer uniform.",

      // ImageUploader
      uploaderTitle: "Drag & drop an image or click to upload",
      uploaderSubtitle: "PNG, JPG, or WEBP. High resolution recommended.",
      uploadPersonTitle: "Upload a photo of a person",
      uploadPersonSubtitle: "A clear, full or half-body shot works best.",
      uploadItemText: "Add item",

      // ResultDisplay
      originalImageTitle: "Original Image",
      generatedImageTitle: "Figure & Package Shot",
      generatedUniformTitle: "Generated Uniform",
      placeholderText: "AI generation will appear here",

      // Try-On Display
      personImageTitle: "Person",
      clothingItemsTitle: "Clothing & Accessories (1-4 items)",
      generatedResultTitle: "Styled Result",

      // Buttons
      transformButton: "Transform to Figure",
      generateButton: "Generate Style",
      regenerateButton: "Re-generate",
      startOverButton: "Start Over",

      // Loader messages
      loaderMsg1: "Warming up the AI's creative circuits...",
      loaderMsg2: "Applying digital paint and polish...",
      loaderMsg3: "Crafting your miniature masterpiece...",
      loaderMsg4: "Shrinking pixels to figure size...",
      loaderMsg5: "This can take a moment, great art needs time.",

      // Errors
      errorTitle: "Error",
      errorUpload: "Please upload an image first.",
      errorPerson: "Please upload a photo of a person.",
      errorItems: "Please upload at least one clothing item.",
      errorGenerate: "The AI could not generate an image. Please try a different image or adjust the options.",
      errorTransform: "An error occurred while transforming the image. Please try again.",
      
      // Pose Options
      poseSectionTitle: "Choose a Pose",
      'Original Pose': "Original Pose",
      // FIX: Use unique key 'Try On: Standing' to avoid conflict.
      'Try On: Standing': "Standing",
      'Fashion Model': "Fashion Model",
      'Walking': "Walking",
      // FIX: Use unique key 'Try On: Sitting' to avoid conflict.
      'Try On: Sitting': "Sitting",
      
      // Background Options
      backgroundSectionTitle: "Choose a Background",
      'Original Background': "Original",
      'Urban': "Urban",
      'Nature': "Nature",
      'Cafe': "Caf√©",

      // TransformOptions
      customizeTitle: "Customize Your Figure",
      coreConceptSection: "Core Concept",
      physicalPropertiesSection: "Physical Properties",
      stagingPoseSection: "Staging & Pose",
      aestheticsSection: "Aesthetics",
      artStyleLabel: "Art Style",
      scaleLabel: "Scale",
      materialLabel: "Material",
      textureLabel: "Surface Texture",
      poseLabel: "Pose",
      baseLabel: "Base",
      backgroundLabel: "Background Scene",
      colorSchemeLabel: "Color Scheme",
      detailingLabel: "Detailing Level",
      // Option values
      '1/12': '1/12 Scale', '1/8': '1/8 Scale', '1/7': '1/7 Scale', '1/6': '1/6 Scale', '1/4': '1/4 Scale',
      'Anime': 'Anime', 'Realistic': 'Realistic', 'Chibi/SD': 'Chibi/SD', 'Stylized': 'Stylized',
      'Matte': 'Matte', 'Glossy': 'Glossy', 'Metallic': 'Metallic', 'Weathered': 'Weathered',
      'None': 'None', 'Simple Disc': 'Simple Disc', 'Themed Diorama': 'Themed Diorama', 'Floating': 'Floating',
      'PVC/ABS': 'PVC/ABS', 'Resin': 'Resin', 'Polystone': 'Polystone', 'Metal': 'Metal',
      // FIX: Use unique key 'Figure: Standing' to avoid conflict.
      'Figure: Standing': 'Standing', 'Dynamic/Action': 'Dynamic/Action', 'Figure: Sitting': 'Sitting',
      'Original Colors': 'Original Colors', 'Monochrome': 'Monochrome', 'Vibrant': 'Vibrant',
      'Standard': 'Standard', 'High': 'High', 'Ultra': 'Ultra',
      'Studio': 'Studio', 'Bookshelf': 'Bookshelf', 'Desktop': 'Desktop', 'Showcase': 'Showcase',

      // Soccer Uniform Options
      jerseyOptions: "Jersey Options (Top)",
      shortsOptions: "Shorts Options (Bottom)",
      renderOptions: "Render Options",
      mainColor: "Main Color",
      accentColor: "Accent Color",
      pattern: "Pattern",
      logoTeam: "Team Logo (Description)",
      logoSponsor: "Sponsor Logo (Description)",
      playerNumber: "Number",
      playerName: "Name",
      fontStyle: "Font Style",
      neckline: "Neckline",
      sleeves: "Sleeves",
      fit: "Fit",
      material: "Material",
      length: "Length",
      waistband: "Waistband",
      view: "View",
      style: "Style",
      'Stripes': 'Stripes',
      'Checkered': 'Checkered',
      'Gradient': 'Gradient',
      'Bold': 'Bold',
      'Italic': 'Italic',
      'Futuristic': 'Futuristic',
      'V-Neck': 'V-Neck',
      'Round Neck': 'Round Neck',
      'Collar': 'Collar',
      'Short': 'Short',
      'Long': 'Long',
      'Slim Fit': 'Slim Fit',
      'Athletic Cut': 'Athletic Cut',
      'Regular': 'Regular',
      'Breathable Polyester': 'Breathable Polyester',
      'Moisture-Wicking': 'Moisture-Wicking',
      'Side Stripes': 'Side Stripes',
      'Mid-thigh': 'Mid-thigh',
      'Elastic with Drawstring': 'Elastic with Drawstring',
      'Loose Fit': 'Loose Fit',
      'Front View': 'Front View',
      '3/4 View': '3/4 View',
      'Full Body View': 'Full Body View',
      'Photorealistic': 'Photorealistic',
      '3D Style': '3D Style',
    },
    descriptions: {
      '1/12': 'Mini scale (approx. 10-15cm), perfect for desktops.',
      '1/8': 'Small scale (approx. 15-20cm), a popular space-saving choice.',
      '1/7': 'Standard anime figure scale (approx. 20-25cm), very common.',
      '1/6': 'Medium scale (approx. 25-30cm), popular for high-end collectibles and action figures.',
      '1/4': 'Large scale (approx. 40-50cm), for highly detailed and impressive statement pieces.',
      'Anime': 'Classic Japanese anime/manga style with large eyes and expressive features.',
      'Realistic': 'Hyper-realistic style with detailed skin textures and accurate anatomy.',
      'Chibi/SD': 'Super-deformed style with a large head and small body for a cute appearance.',
      'Stylized': 'A unique, non-realistic style, like a Western cartoon or fantasy art.',
      'Matte': 'A smooth, non-reflective surface that diffuses light.',
      'Glossy': 'A high-shine, reflective finish for a polished look.',
      'Metallic': 'Simulates the look of real metal, great for armor and weapons.',
      'Weathered': 'Adds an aged or battle-worn look with scratches, dust, or rust.',
      'None': 'The figure stands on its own without a display base.',
      'Simple Disc': 'A clean, elegant circular or square base.',
      'Themed Diorama': 'A scenic base that tells a story, like a battlefield or forest.',
      'Floating': 'A discreet stand that gives a flying or weightless appearance.',
      'PVC/ABS': 'Standard, versatile plastic used for most commercial figures.',
      'Resin': 'High-quality material for capturing fine details, heavier and more brittle.',
      'Polystone': 'A stone-like compound that is heavy and durable.',
      'Metal': 'Uses die-cast metal parts for a premium weight and feel.',
      // FIX: Use unique key 'Figure: Standing' to avoid conflict.
      'Figure: Standing': 'A stable, neutral museum-style standing pose.',
      'Dynamic/Action': 'An energetic pose captured mid-movement, like jumping or attacking.',
      // FIX: Use unique key 'Figure: Sitting' to avoid conflict.
      'Figure: Sitting': 'A relaxed sitting or kneeling pose.',
      'Original Colors': 'Uses the color palette from the uploaded image.',
      'Monochrome': 'Renders the figure in a single color scheme, like grayscale.',
      'Vibrant': 'Enhances the original colors to be more saturated and eye-catching.',
      'Standard': 'A balanced level of detail suitable for the scale.',
      'High': 'Adds fine details like clothing textures and intricate expressions.',
      'Ultra': 'Captures microscopic details for the highest level of realism.',
      'Studio': 'A clean, neutral background for a professional product shot.',
      'Bookshelf': 'Places the figure on a bookshelf among books for a cozy feel.',
      'Desktop': 'A modern desk environment with items like a keyboard or monitor.',
      'Showcase': 'Inside a glass display case with dramatic lighting.',

      // Pose Options descriptions
      'Original Pose': "Maintains the pose from your uploaded photo of the person.",
      // FIX: Use unique key 'Try On: Standing' to avoid conflict.
      'Try On: Standing': "Generates a standard, neutral standing pose.",
      'Fashion Model': "Generates a stylish pose suitable for a fashion catalogue.",
      'Walking': "Generates a dynamic pose as if the person is mid-stride.",
      // FIX: Use unique key 'Try On: Sitting' to avoid conflict.
      'Try On: Sitting': "Generates a natural sitting pose on a simple surface.",
      
      // Background Options descriptions
      'Original Background': "Keeps the background from the original person's photo.",
      'Urban': "A realistic city street or modern building scene.",
      'Nature': "A realistic natural setting like a park, forest, or beach.",
      'Cafe': "A cozy and stylish caf√© interior.",
    }
  },
  ko: {
    ui: {
      selectServiceTitle: "ÏÑúÎπÑÏä§ ÏÑ†ÌÉù",
      figureFusionTitle: "ÌîºÍ∑úÏñ¥ Ìì®Ï†Ñ AI",
      figureFusionDescription: "ÏÇ¨ÏßÑÏùÑ ÏàòÏßëÏö© ÌîºÍ∑úÏñ¥Î°ú Î≥ÄÌôòÌï©ÎãàÎã§.",
      tryOnTitle: "Í∞ÄÏÉÅ ÌîºÌåÖ AI",
      tryOnDescription: "Îã§Î•∏ Ïù¥ÎØ∏ÏßÄÏùò Ïò∑ÏúºÎ°ú ÏÇ¨ÎûåÏùÑ Ïä§ÌÉÄÏùºÎßÅÌï©ÎãàÎã§.",
      backButtonLabel: "Îí§Î°ú Í∞ÄÍ∏∞",
      soccerUniformTitle: "Ï∂ïÍµ¨ Ïú†ÎãàÌèº AI",
      soccerUniformDescription: "ÏÉÅÏÑ∏Ìïú ÏòµÏÖòÏúºÎ°ú ÎßûÏ∂§Ìòï Ï∂ïÍµ¨ Ïú†ÎãàÌèºÏùÑ ÎîîÏûêÏù∏ÌïòÏÑ∏Ïöî.",

      headerTitle: "ÌîºÍ∑úÏñ¥ Ìì®Ï†Ñ AI",
      headerSubtitle: "ÏÇ¨ÏßÑÏùÑ ÏóÖÎ°úÎìúÌïòÎ©¥ AIÍ∞Ä ÎßàÎ≤ïÏ≤òÎüº Î©ãÏßÑ ÏàòÏßëÍ∞Ä Ïä§ÌÉÄÏùºÏùò ÌîºÍ∑úÏñ¥Î°ú Î≥ÄÌôòÌï¥ ÎìúÎ¶ΩÎãàÎã§.",
      
      tryOnHeaderTitle: "Í∞ÄÏÉÅ ÌîºÌåÖ AI",
      tryOnHeaderSubtitle: "ÏÇ¨ÎûåÍ≥º Ïò∑ ÏÇ¨ÏßÑÏùÑ ÏóÖÎ°úÎìúÌïòÏó¨ Ïä§ÌÉÄÏùºÎßÅÎêú Î™®ÏäµÏùÑ ÌôïÏù∏ÌïòÏÑ∏Ïöî.",
      
      soccerHeaderTitle: "Ï∂ïÍµ¨ Ïú†ÎãàÌèº ÎîîÏûêÏù¥ÎÑà",
      soccerHeaderSubtitle: "ÌåÄÏùò Í≥†Ïú†Ìïú Ïú†ÎãàÌèºÏùÑ ÎßåÎìúÏÑ∏Ïöî. ÏÉâÏÉÅ, Ìå®ÌÑ¥, Î°úÍ≥† Îì±ÏùÑ ÏßÄÏ†ïÌïòÏó¨ Ï†ÑÎ¨∏Ï†ÅÏù∏ Ï∂ïÍµ¨ Ïú†ÎãàÌèºÏùÑ ÏÉùÏÑ±Ìï©ÎãàÎã§.",

      uploaderTitle: "Ïù¥ÎØ∏ÏßÄÎ•º ÎìúÎûòÍ∑∏ Ïï§ ÎìúÎ°≠ÌïòÍ±∞ÎÇò ÌÅ¥Î¶≠ÌïòÏó¨ ÏóÖÎ°úÎìúÌïòÏÑ∏Ïöî",
      uploaderSubtitle: "PNG, JPG, ÎòêÎäî WEBP. Í≥†Ìï¥ÏÉÅÎèÑÎ•º Í∂åÏû•Ìï©ÎãàÎã§.",
      uploadPersonTitle: "ÏÇ¨Îûå ÏÇ¨ÏßÑ ÏóÖÎ°úÎìú",
      uploadPersonSubtitle: "ÏÑ†Î™ÖÌïú Ï†ÑÏã† ÎòêÎäî Î∞òÏã† ÏÇ¨ÏßÑÏù¥ Í∞ÄÏû• Ï¢ãÏäµÎãàÎã§.",
      uploadItemText: "ÏïÑÏù¥ÌÖú Ï∂îÍ∞Ä",

      originalImageTitle: "ÏõêÎ≥∏ Ïù¥ÎØ∏ÏßÄ",
      generatedImageTitle: "ÌîºÍ∑úÏñ¥ & Ìå®ÌÇ§ÏßÄ ÏÉ∑",
      generatedUniformTitle: "ÏÉùÏÑ±Îêú Ïú†ÎãàÌèº",
      placeholderText: "AI ÏÉùÏÑ± Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÌëúÏãúÎê©ÎãàÎã§",
      
      personImageTitle: "ÏÇ¨Îûå",
      clothingItemsTitle: "ÏùòÎ•ò Î∞è Ïï°ÏÑ∏ÏÑúÎ¶¨ (1-4Í∞ú)",
      generatedResultTitle: "Ïä§ÌÉÄÏùºÎßÅ Í≤∞Í≥º",

      transformButton: "ÌîºÍ∑úÏñ¥Î°ú Î≥ÄÌôòÌïòÍ∏∞",
      generateButton: "Ïä§ÌÉÄÏùº ÏÉùÏÑ±",
      regenerateButton: "Îã§Ïãú ÏÉùÏÑ±ÌïòÍ∏∞",
      startOverButton: "Ï≤òÏùåÎ∂ÄÌÑ∞ ÏãúÏûë",

      loaderMsg1: "AIÏùò Ï∞ΩÏùò ÌöåÎ°úÎ•º ÏòàÏó¥ Ï§ëÏûÖÎãàÎã§...",
      loaderMsg2: "ÎîîÏßÄÌÑ∏ ÌéòÏù∏Ìä∏ÏôÄ Í¥ëÌÉùÏùÑ Ï†ÅÏö© Ï§ëÏûÖÎãàÎã§...",
      loaderMsg3: "ÎãπÏã†Ïùò ÎØ∏ÎãàÏñ¥Ï≤ò Í±∏ÏûëÏùÑ Ï†úÏûë Ï§ëÏûÖÎãàÎã§...",
      loaderMsg4: "ÌîΩÏÖÄÏùÑ ÌîºÍ∑úÏñ¥ ÌÅ¨Í∏∞Î°ú Ï§ÑÏù¥Îäî Ï§ëÏûÖÎãàÎã§...",
      loaderMsg5: "ÌõåÎ•≠Ìïú ÏòàÏà†ÏóêÎäî ÏãúÍ∞ÑÏù¥ ÌïÑÏöîÌï©ÎãàÎã§. Ïû†ÏãúÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî.",

      errorTitle: "Ïò§Î•ò",
      errorUpload: "Î®ºÏ†Ä Ïù¥ÎØ∏ÏßÄÎ•º ÏóÖÎ°úÎìúÌï¥Ï£ºÏÑ∏Ïöî.",
      errorPerson: "ÏÇ¨Îûå ÏÇ¨ÏßÑÏùÑ ÏóÖÎ°úÎìúÌï¥Ï£ºÏÑ∏Ïöî.",
      errorItems: "ÌïòÎÇò Ïù¥ÏÉÅÏùò ÏùòÎ•ò ÏïÑÏù¥ÌÖúÏùÑ ÏóÖÎ°úÎìúÌï¥Ï£ºÏÑ∏Ïöî.",
      errorGenerate: "AIÍ∞Ä Ïù¥ÎØ∏ÏßÄÎ•º ÏÉùÏÑ±ÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§. Îã§Î•∏ Ïù¥ÎØ∏ÏßÄÎ•º ÏÇ¨Ïö©ÌïòÍ±∞ÎÇò ÏòµÏÖòÏùÑ Ï°∞Ï†ïÌï¥Î≥¥ÏÑ∏Ïöî.",
      errorTransform: "Ïù¥ÎØ∏ÏßÄÎ•º Î≥ÄÌôòÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.",
      
      // Pose Options
      poseSectionTitle: "Ìè¨Ï¶à ÏÑ†ÌÉù",
      'Original Pose': "ÏõêÎ≥∏ Ìè¨Ï¶à",
      // FIX: Use unique key 'Try On: Standing' to avoid conflict.
      'Try On: Standing': "ÏÑúÏûàÎäî Ìè¨Ï¶à",
      'Fashion Model': "Ìå®ÏÖò Î™®Îç∏",
      'Walking': "Í±∑Îäî Ìè¨Ï¶à",
      // FIX: Use unique key 'Try On: Sitting' to avoid conflict.
      'Try On: Sitting': "ÏïâÏùÄ Ìè¨Ï¶à",
      
      // Background Options
      backgroundSectionTitle: "Î∞∞Í≤Ω ÏÑ†ÌÉù",
      'Original Background': "ÏõêÎ≥∏ Î∞∞Í≤Ω",
      'Urban': "ÎèÑÏãú",
      'Nature': "ÏûêÏó∞",
      'Cafe': "Ïπ¥Ìéò",

      customizeTitle: "ÌîºÍ∑úÏñ¥ Ïª§Ïä§ÌÑ∞ÎßàÏù¥Ïßï",
      coreConceptSection: "ÌïµÏã¨ Ïª®ÏÖâ",
      physicalPropertiesSection: "Î¨ºÎ¶¨Ï†Å ÏÜçÏÑ±",
      stagingPoseSection: "Ïó∞Ï∂ú Î∞è Ìè¨Ï¶à",
      aestheticsSection: "ÎØ∏Ï†Å ÏöîÏÜå",
      artStyleLabel: "ÏïÑÌä∏ Ïä§ÌÉÄÏùº",
      scaleLabel: "Ïä§ÏºÄÏùº",
      materialLabel: "Ïû¨Ïßà",
      textureLabel: "ÌëúÎ©¥ ÏßàÍ∞ê",
      poseLabel: "Ìè¨Ï¶à",
      baseLabel: "Î≤†Ïù¥Ïä§",
      backgroundLabel: "Î∞∞Í≤Ω",
      colorSchemeLabel: "ÏÉâÏÉÅ Íµ¨ÏÑ±",
      detailingLabel: "ÎîîÌÖåÏùº ÏàòÏ§Ä",
      '1/12': '1/12 Ïä§ÏºÄÏùº', '1/8': '1/8 Ïä§ÏºÄÏùº', '1/7': '1/7 Ïä§ÏºÄÏùº', '1/6': '1/6 Ïä§ÏºÄÏùº', '1/4': '1/4 Ïä§ÏºÄÏùº',
      'Anime': 'Ïï†ÎãàÎ©îÏù¥ÏÖò', 'Realistic': 'ÏÇ¨Ïã§Ï†Å', 'Chibi/SD': 'ÏπòÎπÑ/SD', 'Stylized': 'Ïä§ÌÉÄÏùºÌôî',
      'Matte': 'Î¨¥Í¥ë', 'Glossy': 'Ïú†Í¥ë', 'Metallic': 'Î©îÌÉàÎ¶≠', 'Weathered': 'Ïõ®ÎçîÎßÅ',
      'None': 'ÏóÜÏùå', 'Simple Disc': 'Îã®Ïàú ÎîîÏä§ÌÅ¨', 'Themed Diorama': 'ÌÖåÎßà ÎîîÏò§ÎùºÎßà', 'Floating': 'ÌîåÎ°úÌåÖ',
      'PVC/ABS': 'PVC/ABS', 'Resin': 'Î†àÏßÑ', 'Polystone': 'Ìè¥Î¶¨Ïä§ÌÜ§', 'Metal': 'Î©îÌÉà',
      // FIX: Use unique key 'Figure: Standing' to avoid conflict.
      'Figure: Standing': 'ÏÑúÏûàÎäî ÏûêÏÑ∏', 'Dynamic/Action': 'Ïó≠ÎèôÏ†Å/Ïï°ÏÖò', 'Figure: Sitting': 'ÏïâÏùÄ ÏûêÏÑ∏',
      'Original Colors': 'ÏõêÎ≥∏ ÏÉâÏÉÅ', 'Monochrome': 'Îã®ÏÉâ', 'Vibrant': 'ÏÑ†Î™ÖÌïú ÏÉâÏÉÅ',
      'Standard': 'ÌëúÏ§Ä', 'High': 'ÎÜíÏùå', 'Ultra': 'ÏµúÏÉÅ',
      'Studio': 'Ïä§ÌäúÎîîÏò§', 'Bookshelf': 'Ï±ÖÏû•', 'Desktop': 'Ï±ÖÏÉÅ', 'Showcase': 'Ïû•ÏãùÏû•',

      // Soccer Uniform Options
      jerseyOptions: "ÏÉÅÏùò(Ï†ÄÏßÄ) ÏòµÏÖò",
      shortsOptions: "ÌïòÏùò(ÏáºÏ∏†) ÏòµÏÖò",
      renderOptions: "Î†åÎçîÎßÅ ÏòµÏÖò",
      mainColor: "Ï£ºÏöî ÏÉâÏÉÅ",
      accentColor: "Î≥¥Ï°∞ ÏÉâÏÉÅ",
      pattern: "Ìå®ÌÑ¥",
      logoTeam: "ÌåÄ Î°úÍ≥† (ÏÑ§Î™Ö)",
      logoSponsor: "Ïä§Ìè∞ÏÑú Î°úÍ≥† (ÏÑ§Î™Ö)",
      playerNumber: "Îì±Î≤àÌò∏",
      playerName: "ÏÑ†Ïàò Ïù¥Î¶Ñ",
      fontStyle: "Ìè∞Ìä∏ Ïä§ÌÉÄÏùº",
      neckline: "Î™© Î∂ÄÎ∂Ñ",
      sleeves: "ÏÜåÎß§",
      fit: "Ìïè",
      material: "Ïû¨Ïßà",
      length: "Í∏∏Ïù¥",
      waistband: "ÌóàÎ¶¨ Î∞¥Îìú",
      view: "ÏãúÏ†ê",
      style: "Ïä§ÌÉÄÏùº",
      'Stripes': 'Ï§ÑÎ¨¥Îä¨',
      'Checkered': 'Ï≤¥ÌÅ¨',
      'Gradient': 'Í∑∏ÎùºÎç∞Ïù¥ÏÖò',
      'Bold': 'ÍµµÍ≤å',
      'Italic': 'Í∏∞Ïö∏ÏûÑÍº¥',
      'Futuristic': 'ÎØ∏ÎûòÏ†Å',
      'V-Neck': 'VÎÑ•',
      'Round Neck': 'ÎùºÏö¥ÎìúÎÑ•',
      'Collar': 'ÏπºÎùº',
      'Short': 'ÏßßÏùÄ ÏÜåÎß§',
      'Long': 'Í∏¥ ÏÜåÎß§',
      'Slim Fit': 'Ïä¨Î¶ºÌïè',
      'Athletic Cut': 'Ïö¥ÎèôÏÑ†Ïàò Ìïè',
      'Regular': 'Î†àÍ∑§Îü¨',
      'Breathable Polyester': 'ÌÜµÍ∏∞ÏÑ± Ìè¥Î¶¨ÏóêÏä§ÌÑ∞',
      'Moisture-Wicking': 'Ìù°ÏäµÏÑ±',
      'Side Stripes': 'Ï∏°Î©¥ Ï§ÑÎ¨¥Îä¨',
      'Mid-thigh': 'ÌóàÎ≤ÖÏßÄ Ï§ëÍ∞Ñ',
      'Elastic with Drawstring': 'Í≥†Î¨¥Ï§ÑÍ≥º ÎÅà',
      'Loose Fit': 'Î£®Ï¶àÌïè',
      'Front View': 'Ï†ïÎ©¥',
      '3/4 View': '3/4 Î∑∞',
      'Full Body View': 'Ï†ÑÏã† Î∑∞',
      'Photorealistic': 'ÏÇ¨ÏßÑÏ≤òÎüº',
      '3D Style': '3D Ïä§ÌÉÄÏùº',
    },
    descriptions: {
      '1/12': 'ÎØ∏Îãà Ïä§ÏºÄÏùº(ÏïΩ 10-15cm), Îç∞Ïä§ÌÅ¨ÌÉëÏóê Ï†ÅÌï©Ìï©ÎãàÎã§.',
      '1/8': 'ÏÜåÌòï Ïä§ÏºÄÏùº(ÏïΩ 15-20cm), Í≥µÍ∞Ñ Ï†àÏïΩÏóê Ï¢ãÏùÄ Ïù∏Í∏∞ÏûàÎäî ÏÑ†ÌÉùÏûÖÎãàÎã§.',
      '1/7': 'ÌëúÏ§Ä Ïï†ÎãàÎ©îÏù¥ÏÖò ÌîºÍ∑úÏñ¥ Ïä§ÏºÄÏùº(ÏïΩ 20-25cm), Îß§Ïö∞ ÏùºÎ∞òÏ†ÅÏûÖÎãàÎã§.',
      '1/6': 'Ï§ëÌòï Ïä§ÏºÄÏùº(ÏïΩ 25-30cm), Í≥†Í∏â ÏàòÏßëÌíà Î∞è Ïï°ÏÖò ÌîºÍ∑úÏñ¥Ïóê Ïù∏Í∏∞Í∞Ä ÎßéÏäµÎãàÎã§.',
      '1/4': 'ÎåÄÌòï Ïä§ÏºÄÏùº(ÏïΩ 40-50cm), Îß§Ïö∞ ÏÉÅÏÑ∏ÌïòÍ≥† Ïù∏ÏÉÅÏ†ÅÏù∏ ÏûëÌíàÏùÑ ÏúÑÌïú ÏÑ†ÌÉùÏûÖÎãàÎã§.',
      'Anime': 'ÌÅ∞ ÎààÍ≥º ÌëúÌòÑÎ†•Ïù¥ ÌíçÎ∂ÄÌïú ÌäπÏßïÏùÑ Í∞ÄÏßÑ ÌÅ¥ÎûòÏãùÌïú ÏùºÎ≥∏ Ïï†ÎãàÎ©îÏù¥ÏÖò/ÎßùÍ∞Ä Ïä§ÌÉÄÏùºÏûÖÎãàÎã§.',
      'Realistic': 'ÏÉÅÏÑ∏Ìïú ÌîºÎ∂Ä ÏßàÍ∞êÍ≥º Ï†ïÌôïÌïú Ìï¥Î∂ÄÌïôÏùÑ Í∞ñÏ∂ò Ï¥àÏÇ¨Ïã§Ï†ÅÏù∏ Ïä§ÌÉÄÏùºÏûÖÎãàÎã§.',
      'Chibi/SD': 'ÌÅ∞ Î®∏Î¶¨ÏôÄ ÏûëÏùÄ Î™∏ÏùÑ Í∞ÄÏßÑ ÏäàÌçº Îç∞Ìè¨Î•¥Î©î Ïä§ÌÉÄÏùºÎ°ú Í∑ÄÏó¨Ïö¥ Ïô∏Î™®Î•º Ïó∞Ï∂úÌï©ÎãàÎã§.',
      'Stylized': 'ÏÑúÏñë Ïπ¥Ìà∞Ïù¥ÎÇò ÌåêÌÉÄÏßÄ ÏïÑÌä∏ÏôÄ Í∞ôÏùÄ ÎèÖÌäπÌïòÍ≥† ÎπÑÌòÑÏã§Ï†ÅÏù∏ Ïä§ÌÉÄÏùºÏûÖÎãàÎã§.',
      'Matte': 'ÎπõÏùÑ Î∂ÑÏÇ∞ÏãúÌÇ§Îäî Î∂ÄÎìúÎüΩÍ≥† Î¨¥Î∞òÏÇ¨ ÌëúÎ©¥ÏûÖÎãàÎã§.',
      'Glossy': 'ÏÑ∏Î†®Îêú ÎäêÎÇåÏùÑ Ï£ºÎäî Í≥†Í¥ëÌÉùÏùò Î∞òÏÇ¨ ÎßàÍ∞êÏûÖÎãàÎã§.',
      'Metallic': 'Ïã§Ï†ú Í∏àÏÜçÏùò Î™®ÏäµÏùÑ ÏãúÎÆ¨Î†àÏù¥ÏÖòÌïòÏó¨ Í∞ëÏò∑Ïù¥ÎÇò Î¨¥Í∏∞Ïóê Ï†ÅÌï©Ìï©ÎãàÎã§.',
      'Weathered': 'Í∏ÅÌûò, Î®ºÏßÄ, ÎÖπ Îì± ÎÇ°Í±∞ÎÇò Ï†ÑÌà¨Î•º Í≤™ÏùÄ ÎìØÌïú ÎäêÎÇåÏùÑ Ï∂îÍ∞ÄÌï©ÎãàÎã§.',
      'None': 'ÌîºÍ∑úÏñ¥Í∞Ä ÎîîÏä§ÌîåÎ†àÏù¥ Î≤†Ïù¥Ïä§ ÏóÜÏù¥ Ïä§Ïä§Î°ú ÏÑú ÏûàÏäµÎãàÎã§.',
      'Simple Disc': 'ÍπîÎÅîÌïòÍ≥† Ïö∞ÏïÑÌïú ÏõêÌòï ÎòêÎäî ÏÇ¨Í∞ÅÌòï Î≤†Ïù¥Ïä§ÏûÖÎãàÎã§.',
      'Themed Diorama': 'Ï†ÑÏû•Ïù¥ÎÇò Ïà≤Ï≤òÎüº Ïä§ÌÜ†Î¶¨Î•º Ï†ÑÎã¨ÌïòÎäî Ïû•Î©¥Ïù¥ ÏûàÎäî Î≤†Ïù¥Ïä§ÏûÖÎãàÎã§.',
      'Floating': 'ÌîºÍ∑úÏñ¥Í∞Ä ÎÇ†Í≥† ÏûàÍ±∞ÎÇò Î¨¥Ï§ëÎ†• ÏÉÅÌÉúÏù∏ Í≤ÉÏ≤òÎüº Î≥¥Ïù¥Í≤å ÌïòÎäî Î≥ÑÎèÑÏùò Ïä§ÌÉ†ÎìúÏûÖÎãàÎã§.',
      'PVC/ABS': 'ÎåÄÎ∂ÄÎ∂ÑÏùò ÏÉÅÏóÖÏö© ÌîºÍ∑úÏñ¥Ïóê ÏÇ¨Ïö©ÎêòÎäî ÌëúÏ§ÄÏ†ÅÏù¥Í≥† Îã§Ïö©ÎèÑÏùò ÌîåÎùºÏä§Ìã±ÏûÖÎãàÎã§.',
      'Resin': 'ÎØ∏ÏÑ∏Ìïú ÎîîÌÖåÏùºÏùÑ ÌëúÌòÑÌïòÍ∏∞ ÏúÑÌïú Í≥†ÌíàÏßà ÏÜåÏû¨Î°ú, Îçî Î¨¥Í≤ÅÍ≥† Íπ®ÏßÄÍ∏∞ ÏâΩÏäµÎãàÎã§.',
      'Polystone': 'Î¨¥Í≤ÅÍ≥† ÎÇ¥Íµ¨ÏÑ±Ïù¥ ÏûàÎäî ÎèåÍ≥º Í∞ôÏùÄ ÏßàÍ∞êÏùò Ìï©ÏÑ±Î¨ºÏûÖÎãàÎã§.',
      'Metal': 'ÌîÑÎ¶¨ÎØ∏ÏóÑ Î¨¥Í≤åÍ∞êÍ≥º ÎäêÎÇåÏùÑ ÏúÑÌï¥ Îã§Ïù¥Ï∫êÏä§Ìä∏ Í∏àÏÜç Î∂ÄÌíàÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§.',
      // FIX: Use unique key 'Figure: Standing' to avoid conflict.
      'Figure: Standing': 'ÏïàÏ†ïÏ†ÅÏù¥Í≥† Ï§ëÎ¶ΩÏ†ÅÏù∏ Î∞ïÎ¨ºÍ¥Ä Ïä§ÌÉÄÏùºÏùò ÏÑúÏûàÎäî ÏûêÏÑ∏ÏûÖÎãàÎã§.',
      'Dynamic/Action': 'Ï†êÌîÑÌïòÍ±∞ÎÇò Í≥µÍ≤©ÌïòÎäî Îì± ÏõÄÏßÅÏù¥Îäî Ï§ëÍ∞ÑÏùÑ Ìè¨Ï∞©Ìïú Ïó≠ÎèôÏ†ÅÏù∏ Ìè¨Ï¶àÏûÖÎãàÎã§.',
      // FIX: Use unique key 'Figure: Sitting' to avoid conflict.
      'Figure: Sitting': 'Ìé∏ÏïàÌïòÍ≤å ÏïâÍ±∞ÎÇò Î¨¥Î¶éÏùÑ ÍøáÏùÄ ÏûêÏÑ∏ÏûÖÎãàÎã§.',
      'Original Colors': 'ÏóÖÎ°úÎìúÎêú Ïù¥ÎØ∏ÏßÄÏùò ÏÉâÏÉÅ ÌåîÎ†àÌä∏Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.',
      'Monochrome': 'ÌîºÍ∑úÏñ¥Î•º Í∑∏Î†àÏù¥Ïä§ÏºÄÏùºÍ≥º Í∞ôÏùÄ Îã®Ïùº ÏÉâÏÉÅ Íµ¨ÏÑ±ÏúºÎ°ú Î†åÎçîÎßÅÌï©ÎãàÎã§.',
      'Vibrant': 'ÏõêÎ≥∏ ÏÉâÏÉÅÏùÑ ÎçîÏö± Ï±ÑÎèÑ ÎÜíÍ≥† ÎààÏóê ÎùÑÍ≤å Ìñ•ÏÉÅÏãúÌÇµÎãàÎã§.',
      'Standard': 'Ïä§ÏºÄÏùºÏóê Ï†ÅÌï©Ìïú Í∑†Ìòï Ïû°Ìûå ÏàòÏ§ÄÏùò ÎîîÌÖåÏùºÏûÖÎãàÎã§.',
      'High': 'ÏùòÏÉÅ ÏßàÍ∞êÏù¥ÎÇò Î≥µÏû°Ìïú ÌëúÏ†ïÍ≥º Í∞ôÏùÄ ÎØ∏ÏÑ∏Ìïú ÎîîÌÖåÏùºÏùÑ Ï∂îÍ∞ÄÌï©ÎãàÎã§.',
      'Ultra': 'ÏµúÍ≥† ÏàòÏ§ÄÏùò ÏÇ¨Ïã§Í∞êÏùÑ ÏúÑÌï¥ ÎØ∏ÏÑ∏Ìïú ÎîîÌÖåÏùºÍπåÏßÄ Ìè¨Ï∞©Ìï©ÎãàÎã§.',
      'Studio': 'Ï†ÑÎ¨∏Ï†ÅÏù∏ Ï†úÌíà ÏÇ¨ÏßÑÏùÑ ÏúÑÌïú ÍπîÎÅîÌïòÍ≥† Ï§ëÎ¶ΩÏ†ÅÏù∏ Î∞∞Í≤ΩÏûÖÎãàÎã§.',
      'Bookshelf': 'ÏïÑÎäëÌïú ÎäêÎÇåÏùÑ Ï£ºÍ∏∞ ÏúÑÌï¥ ÌîºÍ∑úÏñ¥Î•º Ï±ÖÏû• ÏúÑ Ï±ÖÎì§ ÏÇ¨Ïù¥Ïóê Î∞∞ÏπòÌï©ÎãàÎã§.',
      'Desktop': 'ÌÇ§Î≥¥ÎìúÎÇò Î™®ÎãàÌÑ∞ Í∞ôÏùÄ ÏÜåÌíàÏù¥ ÏûàÎäî ÌòÑÎåÄÏ†ÅÏù∏ Ï±ÖÏÉÅ ÌôòÍ≤ΩÏûÖÎãàÎã§.',
      'Showcase': 'ÎìúÎùºÎßàÌã±Ìïú Ï°∞Î™ÖÏù¥ ÏûàÎäî Ïú†Î¶¨ Ïû•ÏãùÏû• ÎÇ¥Î∂ÄÏûÖÎãàÎã§.',

      // Pose Options descriptions
      'Original Pose': "ÏóÖÎ°úÎìúÎêú ÏÇ¨Îûå ÏÇ¨ÏßÑÏùò Ìè¨Ï¶àÎ•º Ïú†ÏßÄÌï©ÎãàÎã§.",
      // FIX: Use unique key 'Try On: Standing' to avoid conflict.
      'Try On: Standing': "ÌëúÏ§ÄÏ†ÅÏù∏ Ï§ëÎ¶Ω ÏÑúÏûàÎäî Ìè¨Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.",
      'Fashion Model': "Ìå®ÏÖò Ïπ¥ÌÉàÎ°úÍ∑∏Ïóê Ï†ÅÌï©Ìïú Ïä§ÌÉÄÏùºÎ¶¨ÏãúÌïú Ìè¨Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.",
      'Walking': "ÎßàÏπò Í±∑Îäî ÎèÑÏ§ëÏù∏ Í≤ÉÏ≤òÎüº Ïó≠ÎèôÏ†ÅÏù∏ Ìè¨Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.",
      // FIX: Use unique key 'Try On: Sitting' to avoid conflict.
      'Try On: Sitting': "Îã®ÏàúÌïú ÌëúÎ©¥Ïóê ÏûêÏó∞Ïä§ÎüΩÍ≤å ÏïâÏïÑÏûàÎäî Ìè¨Ï¶àÎ•º ÏÉùÏÑ±Ìï©ÎãàÎã§.",

      // Background Options descriptions
      'Original Background': "ÏõêÎ≥∏ ÏÇ¨Îûå ÏÇ¨ÏßÑÏùò Î∞∞Í≤ΩÏùÑ Ïú†ÏßÄÌï©ÎãàÎã§.",
      'Urban': "ÏÇ¨Ïã§Ï†ÅÏù∏ ÎèÑÏãú Í±∞Î¶¨ÎÇò ÌòÑÎåÄÏ†ÅÏù∏ Í±¥Î¨º Ïû•Î©¥ÏûÖÎãàÎã§.",
      'Nature': "Í≥µÏõê, Ïà≤, Ìï¥Î≥ÄÍ≥º Í∞ôÏùÄ ÏÇ¨Ïã§Ï†ÅÏù∏ ÏûêÏó∞ ÌôòÍ≤ΩÏûÖÎãàÎã§.",
      'Cafe': "ÏïÑÎäëÌïòÍ≥† ÏÑ∏Î†®Îêú Ïπ¥Ìéò Ïã§ÎÇ¥ÏûÖÎãàÎã§.",
    }
  }
};

type TranslationObject = typeof translations.en.ui;
export type TranslationKey = keyof TranslationObject;
type DescriptionKey = keyof typeof translations.en.descriptions;

export type Language = 'en' | 'ko';

interface LanguageContextType {
    language: Language;
    setLanguage: (lang: Language) => void;
    t: (key: TranslationKey) => string;
    td: (key: DescriptionKey) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
    const [language, setLanguageState] = useState<Language>('ko'); // Default to Korean

    const setLanguage = (lang: Language) => {
        setLanguageState(lang);
    };

    const t = (key: TranslationKey): string => {
        return translations[language].ui[key] || translations.en.ui[key] || key;
    };
    
    const td = (key: DescriptionKey): string => {
        return translations[language].descriptions[key] || translations.en.descriptions[key] || '';
    };

    return (
        <LanguageContext.Provider value={{ language, setLanguage, t, td }}>
            {children}
        </LanguageContext.Provider>
    );
};

export const useLanguage = () => {
    const context = useContext(LanguageContext);
    if (context === undefined) {
        throw new Error('useLanguage must be used within a LanguageProvider');
    }
    return context;
};
